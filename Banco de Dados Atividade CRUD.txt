drop database cadastro_servicos;
show databases;
CREATE DATABASE cadastro_servicos;
USE cadastro_servicos;
drop table usuario;

-- Tabela de Usuarios
SELECT * FROM usuarios;
CREATE TABLE usuarios(
	id int auto_increment primary key,
    nome varchar(255) not null,
    email varchar(150) unique not null,
    senha varchar(50) not null,
    perfil enum('admin','cliente') not null,
    created_at timestamp default current_timestamp,
    updated_at timestamp default current_timestamp on update current_timestamp
);

insert into usuarios (nome, email, senha,perfil) values
('Eliandro Silva','eliandro@gmail.com','senha123','admin'),
('Leisiane Silva','leisiane@gmail.com','senha123','cliente');

-- Tabela de Vendedores
CREATE TABLE vendedores (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL
);

SELECT * FROM vendedores;
insert into vendedores (nome, email) values
('Rafael Moraes','rafael@gmail.com'),
('André Gomes','andre@gmail.com');

-- Tabela de Clientes
SELECT * FROM clientes;
create table clientes(
	id int auto_increment primary key,
    nome varchar(255) not null,
    email varchar(150) unique not null,
    endereco varchar(255) not null,
    telefone varchar(20) not null,
    observacoes text not null,
    usuario_id int not null,
    created_at timestamp default current_timestamp,
    updated_at timestamp default current_timestamp on update current_timestamp,
    foreign key (usuario_id) references usuarios(id)
);

INSERT INTO clientes (nome, email, endereco, telefone, observacoes, usuario_id) VALUES
('Eliandro', 'eliandro@gmail.com', 'Rua Alagoas, 1116', '1fdgf6789', 'Cliente regular, necessita de acompanhamento mensal',1),
('João', 'joao@gmail.com', 'Rua Alagoas, 1116', '12bvb6789', 'Cliente GBB, Não necessita de acompanhamento mensal',2),
('Fred', 'fred@gmail.com', 'Rua Alagoas, 1116', '1234xcbx789', 'Cliente Aeg, necessita de acompanhamento trimestral',2);


-- Tabela de Segmentos
create table segmentos(
	id int auto_increment primary key,
    nome varchar(255) not null
);

insert into segmentos (nome) Values
('Serviços de limpeza'),
('Orçamento'),
('Manutenção Preventiva'),
('Manutenção Preventiva Completa'),
('Troca de Conector'),
('Serviços GBB');


-- Tabela de Servicos
create table servicos(
	id int auto_increment primary key,
    nome varchar(255) not null,
    descricao text not null,
    preco decimal(10,2) not null,
    segmento_id int,
    usuario_id int,
    created_at timestamp default current_timestamp,
    updated_at timestamp default current_timestamp on update current_timestamp,
    foreign key (segmento_id) references segmentos(id),
    foreign key (usuario_id) references usuarios(id)
);

insert into servicos(nome,descricao,preco,segmento_id,usuario_id) values
('Orçamento de Aeg','Abetura e avaliação de situação do equipamento',80.00,1,2),
('Manutenção Preventiva','Troca de todas as peças e linpeza geral', 200.00,2,2),
('Manutenção Copleta','Desmontagem total, Troca de todas as peças e linpeza geral',350.00,3,2);

-- Tabela de Produtos
SELECT * FROM produtos;
CREATE TABLE produtos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    preco DECIMAL(10, 2) NOT NULL,
    estoque INT NOT NULL
);

-- Tabela de Vendas
SELECT * FROM vendas;
CREATE TABLE vendas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_cliente INT,
    id_vendedor INT,
    data_venda TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_cliente) REFERENCES clientes(id),
    FOREIGN KEY (id_vendedor) REFERENCES vendedores(id)
);




SELECT s.nome AS servico, s.descricao, s.preco, se.nome AS segmento, u.nome AS usuario
FROM servicos s
JOIN segmentos se ON s.segmento_id = se.id
JOIN usuarios u ON s.usuario_id = u.id;

SELECT c.endereco, c.telefone, c.observacoes, u.nome AS usuario
FROM clientes c
JOIN usuarios u ON c.nome = u.id;

